# Generated by Django 4.1.7 on 2023-07-09 12:30

import django.db.models.deletion
import embed_video.fields
import modelcluster.fields
import wagtail.blocks
import wagtail.fields
import wagtail.images.blocks
from django.db import migrations, models


class Migration(migrations.Migration):
    replaces = [
        ("core", "0017_auto_20220127_1533"),
        ("core", "0018_alter_experiencepage_categories"),
        ("core", "0019_availabletags"),
        ("core", "0020_alter_experiencepage_vid_url"),
        ("core", "0021_experiencepage_featured"),
        ("core", "0022_homepage_cover_image"),
        ("core", "0023_auto_20220303_1703"),
        ("core", "0024_auto_20220303_1706"),
        ("core", "0025_auto_20220303_1717"),
        ("core", "0026_auto_20220305_1703"),
        ("core", "0027_auto_20220305_1705"),
        ("core", "0028_blogpage"),
        ("core", "0029_alter_experiencepage_code"),
        ("core", "0030_experiencepage_first_publish"),
        ("core", "0031_alter_experiencepage_cover_img_url"),
        ("core", "0032_experiencepage_bugged"),
        ("core", "0033_auto_20220824_1633"),
    ]

    dependencies = [
        ("wagtailimages", "0023_add_choose_permissions"),
        ("wagtailcore", "0066_collection_management_permissions"),
        ("core", "0016_auto_20220127_1519"),
    ]

    operations = [
        migrations.RemoveField(
            model_name="experiencescategory",
            name="bg_color",
        ),
        migrations.RemoveField(
            model_name="experiencescategory",
            name="bg_hover_color",
        ),
        migrations.RemoveField(
            model_name="experiencescategory",
            name="text_color",
        ),
        migrations.RemoveField(
            model_name="experiencescategory",
            name="text_hover_color",
        ),
        migrations.AlterField(
            model_name="experiencepage",
            name="categories",
            field=modelcluster.fields.ParentalManyToManyField(
                help_text="Choose from the Category", to="core.experiencescategory"
            ),
        ),
        migrations.CreateModel(
            name="AvailableTags",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "tags",
                    models.TextField(
                        blank=True,
                        verbose_name="All available tags in BF 2042 Portal Rules editor",
                    ),
                ),
            ],
        ),
        migrations.AlterField(
            model_name="experiencepage",
            name="vid_url",
            field=embed_video.fields.EmbedVideoField(
                blank=True,
                default="",
                help_text="Link to vid showcasing your experience",
                verbose_name="Video Url",
            ),
        ),
        migrations.AddField(
            model_name="experiencepage",
            name="featured",
            field=models.BooleanField(
                default=False,
                help_text="Is this experience a featured experience",
                verbose_name="Set Featured",
            ),
        ),
        migrations.AddField(
            model_name="experiencepage",
            name="extra_content",
            field=wagtail.fields.StreamField(
                [
                    ("heading", wagtail.blocks.CharBlock(form_classname="full title")),
                    ("cover_image", wagtail.images.blocks.ImageChooserBlock()),
                    ("text", wagtail.blocks.RichTextBlock()),
                ],
                blank=True,
                use_json_field=None,
            ),
        ),
        migrations.AddField(
            model_name="experiencespage",
            name="extra_content",
            field=wagtail.fields.StreamField(
                [
                    ("heading", wagtail.blocks.CharBlock(form_classname="full title")),
                    ("cover_image", wagtail.images.blocks.ImageChooserBlock()),
                    ("text", wagtail.blocks.RichTextBlock()),
                ],
                blank=True,
                use_json_field=None,
            ),
        ),
        migrations.AddField(
            model_name="homepage",
            name="extra_content",
            field=wagtail.fields.StreamField(
                [
                    ("heading", wagtail.blocks.CharBlock(form_classname="full title")),
                    ("cover_image", wagtail.images.blocks.ImageChooserBlock()),
                    ("text", wagtail.blocks.RichTextBlock()),
                ],
                blank=True,
                use_json_field=None,
            ),
        ),
        migrations.AddField(
            model_name="profilepage",
            name="extra_content",
            field=wagtail.fields.StreamField(
                [
                    ("heading", wagtail.blocks.CharBlock(form_classname="full title")),
                    ("cover_image", wagtail.images.blocks.ImageChooserBlock()),
                    ("text", wagtail.blocks.RichTextBlock()),
                ],
                blank=True,
                use_json_field=None,
            ),
        ),
        migrations.CreateModel(
            name="BlogPage",
            fields=[
                (
                    "page_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="wagtailcore.page",
                    ),
                ),
                (
                    "extra_content",
                    wagtail.fields.StreamField(
                        [
                            (
                                "heading",
                                wagtail.blocks.CharBlock(form_classname="full title"),
                            ),
                            ("cover_image", wagtail.images.blocks.ImageChooserBlock()),
                            ("text", wagtail.blocks.RichTextBlock()),
                        ],
                        blank=True,
                        use_json_field=None,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=("wagtailcore.page",),
        ),
        migrations.AlterField(
            model_name="experiencepage",
            name="code",
            field=models.CharField(
                blank=True,
                default="",
                help_text="Six letter alpha-numeric code of you experience",
                max_length=6,
                verbose_name="Experience Code",
            ),
        ),
        migrations.AddField(
            model_name="experiencepage",
            name="first_publish",
            field=models.BooleanField(default=True),
        ),
        migrations.AlterField(
            model_name="experiencepage",
            name="cover_img_url",
            field=models.URLField(
                blank=True,
                default="/static/images/placeholder.png",
                help_text="Link for your cover Image",
                verbose_name="Cover Image Url",
            ),
        ),
        migrations.AddField(
            model_name="experiencepage",
            name="bugged",
            field=models.BooleanField(
                default=False,
                help_text="Is the experience bugged",
                verbose_name="Bugged ?",
            ),
        ),
    ]
